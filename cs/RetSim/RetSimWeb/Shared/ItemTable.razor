@using RetSim
@using RetSim.Items
@using RetSim.Units.UnitStats
@inject AppState AppState
@inject IJSRuntime JS

<MudTable Class="full-height" Height="100%" T="EquippableItem" OnRowClick="@(args => OnItemClicked(args))" CustomHeader="true" RowClassFunc=@RowClass @bind-SelectedItem="SelectedItem" AllowUnsorted="false" Dense="true" Striped="true" SortLabel="Sort By" Items="@Items" Hover="true" Breakpoint="Breakpoint.Sm">	
<HeaderContent>
        <MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.ItemLevel)">Level</MudTableSortLabel></MudTh>	
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"></MudTh>
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.Strength])">Str</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.AttackPower])">AP</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.Agility])">Agi</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.CritRating])">Crit</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.HitRating])">Hit</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.HasteRating])">Haste</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.ExpertiseRating])">Exp</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.ArmorPenetration])">APen</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.Stamina])">Sta</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.Intellect])">Int</MudTableSortLabel></MudTh>		
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.ManaPer5])">MP5</MudTableSortLabel></MudTh>	
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.SpellPower])">SP</MudTableSortLabel></MudTh>	
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.SpellCritRating])">SCrit</MudTableSortLabel></MudTh>	
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.SpellHitRating])">SHit</MudTableSortLabel></MudTh>	
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>x.Stats[StatName.SpellHasteRating])">SHaste</MudTableSortLabel></MudTh>
		<MudTh Class="py-0 pl-3 pr-0" Style="background-color: var(--mud-palette-surface);position:sticky;z-index:2;top:0;"><MudTableSortLabel SortBy="new Func<EquippableItem, object>(x=>0)">DPS</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd Class="py-0 pl-3 pr-0" DataLabel="Name"><a onclick="return false;" href="https://tbc.wowhead.com/item=@context.ID">@context.Name</a></MudTd>
        <MudTd Class="py-0 pl-3 pr-0" DataLabel="Level">@context.ItemLevel</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Socket"> 
			<MudButton Style="min-width:0" Class="pa-1" Disabled="@(context.Socket1==null)" OnClick="@(e => OpenGemSelect(context.Socket1))" Variant="Variant.Text"><img style="display:@(context.Socket1==null? "none" : "");width:16px;height:16px;" src="@GetSocketImage(@context.Socket1)" alt=""></MudButton><MudButton Style="min-width:0" Class="pa-1" Disabled="@(context.Socket2==null)" OnClick="@(e => OpenGemSelect(context.Socket2))" Variant="Variant.Text"><img style="display:@(context.Socket2==null? "none" : "");width:16px;height:16px;" src="@GetSocketImage(@context.Socket2)" ></MudButton><MudButton Style="min-width:0" Class="pa-1" Disabled="@(context.Socket3==null)" OnClick="@(e => OpenGemSelect(context.Socket3))" Variant="Variant.Text"><img style="display:@(context.Socket3==null? "none" : "");width:16px;height:16px;" src="@GetSocketImage(@context.Socket3)" ></MudButton>
		</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Str">@Format(@context.Stats[StatName.Strength])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="AP">@Format(@context.Stats[StatName.AttackPower])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Agi">@Format(@context.Stats[StatName.Agility])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Crit">@Format(@context.Stats[StatName.CritRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Hit">@Format(@context.Stats[StatName.HitRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Haste">@Format(@context.Stats[StatName.HasteRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Exp">@Format(@context.Stats[StatName.ExpertiseRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="APen">@Format(@context.Stats[StatName.ArmorPenetration])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Sta">@Format(@context.Stats[StatName.Stamina])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="Int">@Format(@context.Stats[StatName.Intellect])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="MP5">@Format(@context.Stats[StatName.ManaPer5])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="SP">@Format(@context.Stats[StatName.SpellPower])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="SCrit">@Format(@context.Stats[StatName.SpellCritRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="SHit">@Format(@context.Stats[StatName.SpellHitRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="SHaste">@Format(@context.Stats[StatName.SpellHasteRating])</MudTd>
		<MudTd Class="py-0 pl-3 pr-0" DataLabel="DPS">0</MudTd>

	</RowTemplate>
</MudTable>

<MudOverlay OnClick="CancleGemSelect" Visible="isVisible" DarkBackground="true" Absolute="true">
	<MudTable Height="500px" T="Gem" OnRowClick="@(args => OnGemClicked(args))" Items="RetSim.Data.Items.Gems.Values" Hover="true" Dense="true" Striped="true" FixedHeader="true" Breakpoint="Breakpoint.Sm">
		<HeaderContent>
			<MudTh>Name</MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Name">
				<a onclick="return false;" href="https://tbc.wowhead.com/item=@context.ID">@context.Name</a>
				</MudTd>
		</RowTemplate>
	</MudTable>
	<MudButton Variant="Variant.Filled" Color="Color.Primary"  OnClick="@(e => RemoveGem())">Remove Gem</MudButton>
</MudOverlay>

@code {
	public EquippableItem SelectedItem { get; set; }
	
	private bool isVisible;
	private Socket selectedSocket;

	protected override void OnInitialized()
    {
        SelectedItem = AppState.Equipment.PlayerEquipment[Slot];
		RowClass = (item, rowNumber) => item == SelectedItem ? "mud-info" : "";
	}

    private void OpenGemSelect(Socket socket)
    {
        isVisible = true;
		selectedSocket = socket;
	}

	private void CancleGemSelect()
	{
		isVisible = false;
		selectedSocket = null;
		JS.InvokeVoidAsync("WH.Tooltip.hide");
	}

	private void RemoveGem()
    {
		selectedSocket.SocketedGem = null;
		AppState.GemsUpdated();
		CancleGemSelect();
	}

	private void OnGemClicked(TableRowClickEventArgs<Gem> args )
    {
		selectedSocket.SocketedGem = args.Item;
		AppState.GemsUpdated();
		CancleGemSelect();
	}

	private void OnItemClicked(TableRowClickEventArgs<EquippableItem> args )
    {
		AppState.ChangeItem(Slot, args.Item);
	}

	[Parameter]
    public IEnumerable<EquippableItem> Items { get; set; }

    [Parameter]
    public int Slot { get; set; }

	Func<EquippableItem, int, string> RowClass;

	public string Format(float value)
	{
		int oVlaue = Convert.ToInt32(value);
		return oVlaue == 0? "" : oVlaue.ToString();
	}

	public string GetSocketImage(Socket socket)
	{
		if(socket != null)
		{
			if(socket.SocketedGem != null)
			{
				return  @"https://wow.zamimg.com/images/wow/icons/large/inv_jewelcrafting_livingruby_03.jpg";
			}
			switch (socket.Color)
			{
				case SocketColor.Meta:
					return  @"https://wow.zamimg.com/images/icons/socket-meta.gif";
				case SocketColor.Red:
					return  @"https://wow.zamimg.com/images/icons/socket-red.gif";
				case SocketColor.Blue:
					return  @"https://wow.zamimg.com/images/icons/socket-blue.gif";
				case SocketColor.Yellow:
					return  @"https://wow.zamimg.com/images/icons/socket-yellow.gif";
				default:
					break;
			}

		}
		return "";
	}
}